version: "3.7"

services:
  db:
    image: postgres:9.4-alpine
    volumes:
      - ${VOLUME_PATH:-/mnt/data}/{{ index .Service.Labels "com.docker.stack.namespace" }}/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=mattermost
      - POSTGRES_PASSWORD=myp@ssw0rd
      - POSTGRES_DB=mattermost
    networks:
      - internal

  app:
    image: mattermost/mattermost-prod-app:5.8.0
    volumes:
      - ${VOLUME_PATH:-/mnt/data}/{{ index .Service.Labels "com.docker.stack.namespace" }}/data:/mattermost/data
      - ${VOLUME_PATH:-/mnt/data}/{{ index .Service.Labels "com.docker.stack.namespace" }}/config:/mattermost/config:nocopy
      - ${VOLUME_PATH:-/mnt/data}/{{ index .Service.Labels "com.docker.stack.namespace" }}/plugins:/mattermost/plugins:nocopy
    environment:
      - MM_USERNAME=mattermost
      - MM_PASSWORD=myp@ssw0rd
      - MM_DBNAME=mattermost
    networks:
      - internal

  web:
    image: mattermost/mattermost-prod-web:5.8.0
    deploy:
      labels:
        traefik.port: 80
        traefik.frontend.rule: Host:${DOMAIN:?err}
        traefik.enable: "true"
        traefik.docker.network: traefik-net
    networks:
      - internal
      - traefik

networks:
  internal:
  traefik:
    external:
      name: traefik-net
